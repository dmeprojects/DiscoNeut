[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\DME-Projects_Software\DiscoNeut\Firmware\test-routines\Blink\blink\build\bootloader\esp-idf\esptool_py && C:\Users\nick_\.espressif\python_env\idf5.2_py3.8_env\Scripts\python.exe D:/ESP-IDF/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 D:/DME-Projects_Software/DiscoNeut/Firmware/test-routines/Blink/blink/build/bootloader/bootloader.bin"
Bootloader binary size 0x5070 bytes. 0x2f90 bytes (37%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink_example_main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Building C object CMakeFiles/blink.elf.dir/project_elf_src_esp32c3.c.obj
[6/8] Linking CXX executable blink.elf
[7/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32c3 image...
Merged 1 ELF section
Successfully created esp32c3 image.
Generated D:/DME-Projects_Software/DiscoNeut/Firmware/test-routines/Blink/blink/build/blink.bin
[8/8] cmd.exe /C "cd /D D:\DME-Projects_Software\DiscoNeut\Firmware\test-routines\Blink\blink\build\esp-idf\esptool_py && C:\Users\nick_\.espressif\python_env\idf5.2_py3.8_env\Scripts\python.exe D:/ESP-IDF/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/DME-Projects_Software/DiscoNeut/Firmware/test-routines/Blink/blink/build/partition_table/partition-table.bin D:/DME-Projects_Software/DiscoNeut/Firmware/test-routines/Blink/blink/build/blink.bin"
blink.bin binary size 0x2e8d0 bytes. Smallest app partition is 0x100000 bytes. 0xd1730 bytes (82%) free.
